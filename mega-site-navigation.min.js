if (!Util)
function Util() {}
if (Util.is = function(e, t) {
        if (t.nodeType) return e === t;
        for (var s = "string" == typeof t ? document.querySelectorAll(t) : t, i = s.length; i--;)
            if (s[i] === e) return !0;
        return !1
    }, Util.extend = function() {
        var s = {},
            i = !1,
            e = 0,
            t = arguments.length;
        "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && (i = arguments[0], e++);
        for (var n = function(e) {
                for (var t in e) Object.prototype.hasOwnProperty.call(e, t) && (i && "[object Object]" === Object.prototype.toString.call(e[t]) ? s[t] = extend(!0, s[t], e[t]) : s[t] = e[t])
            }; e < t; e++) {
            n(arguments[e])
        }
        return s
    }, window.menuAim = function(e) {
        ! function(e) {
            var g = null,
                p = [],
                f = null,
                s = null,
                C = Util.extend({
                    menu: "",
                    rows: !1,
                    submenuSelector: "*",
                    submenuDirection: "right",
                    tolerance: 75,
                    enter: function() {},
                    exit: function() {},
                    activate: function() {},
                    deactivate: function() {},
                    exitMenu: function() {}
                }, e),
                b = C.menu,
                t = function(e) {
                    window.requestAnimationFrame ? window.requestAnimationFrame(function() {
                        i(e)
                    }) : i(e)
                },
                i = function(e) {
                    p.push({
                        x: e.pageX,
                        y: e.pageY
                    }), 3 < p.length && p.shift()
                },
                n = function() {
                    s && clearTimeout(s), C.exitMenu(this) && (g && C.deactivate(g), g = null)
                },
                l = function() {
                    s && clearTimeout(s), C.enter(this), d(this)
                },
                a = function() {
                    C.exit(this)
                },
                o = function() {
                    r(this)
                },
                r = function(e) {
                    e != g && (g && C.deactivate(g), C.activate(e), g = e)
                },
                d = function(e) {
                    var t = u();
                    t ? s = setTimeout(function() {
                        d(e)
                    }, t) : r(e)
                },
                u = function() {
                    if (!g || !Util.is(g, C.submenuSelector)) return 0;
                    var e, t = {
                            top: (e = b.getBoundingClientRect()).top + window.pageYOffset,
                            left: e.left + window.pageXOffset
                        },
                        s = {
                            x: t.left,
                            y: t.top - C.tolerance
                        },
                        i = {
                            x: t.left + b.offsetWidth,
                            y: s.y
                        },
                        n = {
                            x: t.left,
                            y: t.top + b.offsetHeight + C.tolerance
                        },
                        l = {
                            x: t.left + b.offsetWidth,
                            y: n.y
                        },
                        a = p[p.length - 1],
                        o = p[0];
                    if (!a) return 0;
                    if (o || (o = a), o.x < t.left || o.x > l.x || o.y < t.top || o.y > l.y) return 0;
                    if (f && a.x == f.x && a.y == f.y) return 0;

                    function r(e, t) {
                        return (t.y - e.y) / (t.x - e.x)
                    }
                    var d = i,
                        u = l;
                    "left" == C.submenuDirection ? (d = n, u = s) : "below" == C.submenuDirection ? (d = l, u = n) : "above" == C.submenuDirection && (d = s, u = i);
                    var c = r(a, d),
                        h = r(a, u),
                        m = r(o, d),
                        v = r(o, u);
                    return c < m && v < h ? (f = a, 300) : (f = null, 0)
                };
            b.addEventListener("mouseleave", n);
            var c, h = C.rows ? C.rows : b.children;
            if (0 < h.length)
                for (var m = 0; m < h.length; m++) h[c = m].addEventListener("mouseenter", l), h[c].addEventListener("mouseleave", a), h[c].addEventListener("click", o);
            document.addEventListener("mousemove", t), b.addEventListener("reset", function(e) {
                var t;
                t = e.detail, s && clearTimeout(s), g && t && C.deactivate(g), g = null
            }), b.addEventListener("destroy", function() {
                if (b.removeEventListener("mouseleave", n), document.removeEventListener("mousemove", t), 0 < h.length)
                    for (var e = 0; e < h.length; e++) h[e].removeEventListener("mouseenter", l), h[e].removeEventListener("mouseleave", a), h[e].removeEventListener("click", o)
            })
        }(e)
    }, !Util)
function Util() {}
if (Util.hasClass = function(e, t) {
        return e.classList.contains(t)
    }, Util.addClass = function(e, t) {
        var s = t.split(" ");
        e.classList.add(s[0]), 1 < s.length && Util.addClass(e, s.slice(1).join(" "))
    }, Util.removeClass = function(e, t) {
        var s = t.split(" ");
        e.classList.remove(s[0]), 1 < s.length && Util.removeClass(e, s.slice(1).join(" "))
    }, function() {
        var e = function(e) {
            this.element = e, this.trigger = this.element.getElementsByClassName("saka-js-dropdown__trigger")[0], this.dropdown = this.element.getElementsByClassName("saka-js-dropdown__menu")[0], this.triggerFocus = !1, this.dropdownFocus = !1, this.hideInterval = !1, this.dropdownSubElements = this.element.getElementsByClassName("saka-js-dropdown__sub-wrapper"), this.prevFocus = !1, this.addDropdownEvents()
        };
        e.prototype.addDropdownEvents = function() {
            var t = this;
            this.placeElement(), this.element.addEventListener("placeDropdown", function(e) {
                t.placeElement()
            }), this.initElementEvents(this.trigger, this.triggerFocus), this.initElementEvents(this.dropdown, this.dropdownFocus), this.initSublevels()
        }, e.prototype.placeElement = function() {
            this.dropdown.removeAttribute("style");
            var e = this.trigger.getBoundingClientRect(),
                t = window.innerWidth < e.left + parseInt(getComputedStyle(this.dropdown).getPropertyValue("width")) ? "right: 0px; left: auto;" : "left: 0px; right: auto;";
            this.dropdown.setAttribute("style", t)
        }, e.prototype.initElementEvents = function(e, t) {
            var s = this;
            e.addEventListener("mouseenter", function() {
                !0, s.showDropdown()
            }), e.addEventListener("focus", function() {
                s.showDropdown()
            }), e.addEventListener("mouseleave", function() {
                !1, s.hideDropdown()
            }), e.addEventListener("focusout", function() {
                s.hideDropdown()
            })
        }, e.prototype.showDropdown = function() {
            this.hideInterval && clearInterval(this.hideInterval), this.dropdown.removeAttribute("style"), this.placeElement(), this.showLevel(this.dropdown, !0)
        }, e.prototype.hideDropdown = function() {
            var s = this;
            this.hideInterval && clearInterval(this.hideInterval), this.hideInterval = setTimeout(function() {
                var e = document.activeElement.closest(".saka-js-dropdown"),
                    t = e && e == s.element;
                s.triggerFocus || s.dropdownFocus || t || (s.hideLevel(s.dropdown, !0), s.hideSubLevels(), s.prevFocus = !1)
            }, 300)
        }, e.prototype.initSublevels = function() {
            for (var o = this, e = this.element.getElementsByClassName("saka-js-dropdown__menu"), t = 0; t < e.length; t++) {
                e[t].children;
                new menuAim({
                    menu: e[t],
                    activate: function(e) {
                        var t = e.getElementsByClassName("saka-js-dropdown__menu")[0];
                        t && (Util.addClass(e.querySelector("a"), "saka-dropdown__item--hover"), o.showLevel(t))
                    },
                    deactivate: function(e) {
                        var t = e.getElementsByClassName("saka-dropdown__menu")[0];
                        t && (Util.removeClass(e.querySelector("a"), "saka-dropdown__item--hover"), o.hideLevel(t))
                    },
                    submenuSelector: ".saka-js-dropdown__sub-wrapper"
                })
            }
            this.element.addEventListener("keydown", function(e) {
                (e.keyCode && 9 == e.keyCode || e.key && "Tab" == e.key) && (o.prevFocus = document.activeElement)
            }), this.element.addEventListener("keyup", function(e) {
                if (e.keyCode && 9 == e.keyCode || e.key && "Tab" == e.key) {
                    var t = document.activeElement,
                        s = t.closest(".saka-js-dropdown__menu"),
                        i = t.nextElementSibling;
                    if (s && !Util.hasClass(s, "saka-dropdown__menu--is-visible") && o.showLevel(s), i && !Util.hasClass(i, "saka-dropdown__menu--is-visible") && o.showLevel(i), !o.prevFocus) return;
                    var n = o.prevFocus.closest(".saka-js-dropdown__menu"),
                        l = o.prevFocus.nextElementSibling;
                    if (!n) return;
                    if (s && s == n) return void(l && o.hideLevel(l));
                    if (l && s && s == l) return;
                    if (i && n && i == n) return;
                    var a = s.parentNode.closest(".saka-js-dropdown__menu");
                    if (a && a == n) return void(l && o.hideLevel(l));
                    n && Util.hasClass(n, "saka-dropdown__menu--is-visible") && o.hideLevel(n)
                }
            })
        }, e.prototype.hideSubLevels = function() {
            var e = this.dropdown.getElementsByClassName("saka-dropdown__menu--is-visible");
            if (0 != e.length) {
                for (; e[0];) this.hideLevel(e[0]);
                for (var t = this.dropdown.getElementsByClassName("saka-dropdown__item--hover"); t[0];) Util.removeClass(t[0], "saka-dropdown__item--hover")
            }
        }, e.prototype.showLevel = function(e, t) {
            if (null == t) {
                Util.removeClass(e, "saka-dropdown__menu--left");
                var s = e.getBoundingClientRect();
                window.innerWidth - s.right < 5 && s.left + window.scrollX > 2 * s.width && Util.addClass(e, "dropdown__menu--left")
            }
            Util.addClass(e, "saka-dropdown__menu--is-visible"), Util.removeClass(e, "saka-dropdown__menu--hide")
        }, e.prototype.hideLevel = function(s, i) {
            Util.hasClass(s, "saka-dropdown__menu--is-visible") && (Util.removeClass(s, "saka-dropdown__menu--is-visible"), Util.addClass(s, "saka-dropdown__menu--hide"), s.addEventListener("transitionend", function e(t) {
                "opacity" == t.propertyName && (s.removeEventListener("transitionend", e), Util.hasClass(s, "saka-dropdown__menu--hide") && Util.removeClass(s, "saka-dropdown__menu--hide dropdown__menu--left"), i && !Util.hasClass(s, "saka-dropdown__menu--is-visible") && s.setAttribute("style", "width: 0px; overflow: hidden;"))
            }))
        }, window.Dropdown = e;
        var t = document.getElementsByClassName("saka-js-dropdown");
        if (0 < t.length)
            for (var s = 0; s < t.length; s++) new e(t[s])
    }(), !Util)
function Util() {}
if (Util.addClass = function(e, t) {
        var s = t.split(" ");
        e.classList.add(s[0]), 1 < s.length && Util.addClass(e, s.slice(1).join(" "))
    }, Util.removeClass = function(e, t) {
        var s = t.split(" ");
        e.classList.remove(s[0]), 1 < s.length && Util.removeClass(e, s.slice(1).join(" "))
    }, Util.addClass = function(e, t) {
        var s = t.split(" ");
        e.classList.add(s[0]), 1 < s.length && Util.addClass(e, s.slice(1).join(" "))
    }, Util.toggleClass = function(e, t, s) {
        s ? Util.addClass(e, t) : Util.removeClass(e, t)
    }, Util.setAttributes = function(e, t) {
        for (var s in t) e.setAttribute(s, t[s])
    }, Util.hasClass = function(e, t) {
        return e.classList.contains(t)
    }, Util.getChildrenByClassName = function(e, t) {
        for (var s = e.children, i = [], n = 0; n < s.length; n++) Util.hasClass(s[n], t) && i.push(s[n]);
        return i
    }, Util.getIndexInArray = function(e, t) {
        return Array.prototype.indexOf.call(e, t)
    }, function() {
        var e = function(e) {
            this.element = e, this.tabList = this.element.getElementsByClassName("saka-js-tabs__controls")[0], this.listItems = this.tabList.getElementsByTagName("li"), this.triggers = this.tabList.getElementsByTagName("a"), this.panelsList = this.element.getElementsByClassName("js-tabs__panels")[0], this.panels = Util.getChildrenByClassName(this.panelsList, "saka-js-tabs__panel"), this.hideClass = this.element.getAttribute("data-hide-panel-class") ? this.element.getAttribute("data-hide-panel-class") : "hide", this.customShowClass = !!this.element.getAttribute("data-show-panel-class") && this.element.getAttribute("data-show-panel-class"), this.layout = this.element.getAttribute("data-tabs-layout") ? this.element.getAttribute("data-tabs-layout") : "horizontal", this.deepLinkOn = "on" == this.element.getAttribute("data-deep-link"), this.initTab()
        };
        e.prototype.initTab = function() {
            this.tabList.setAttribute("role", "tablist"), Util.addClass(this.element, "saka-tabs--no-interaction");
            for (var e = 0; e < this.triggers.length; e++) {
                var t = 0 == e,
                    s = this.panels[e].getAttribute("id");
                this.listItems[e].setAttribute("role", "presentation"), Util.setAttributes(this.triggers[e], {
                    role: "tab",
                    "aria-selected": t,
                    "aria-controls": s,
                    id: "tab-" + s
                }), Util.addClass(this.triggers[e], "saka-js-tabs__trigger"), Util.setAttributes(this.panels[e], {
                    role: "tabpanel",
                    "aria-labelledby": "tab-" + s
                }), Util.toggleClass(this.panels[e], this.hideClass, !t), t && this.customShowClass && Util.addClass(this.panels[e], this.customShowClass), t || this.triggers[e].setAttribute("tabindex", "-1")
            }
            this.initTabEvents(), this.initDeepLink()
        }, e.prototype.initTabEvents = function() {
            var l = this;
            this.tabList.addEventListener("click", function(e) {
                e.target.closest(".saka-js-tabs__trigger") && l.triggerTab(e.target.closest(".saka-js-tabs__trigger"), e)
            }), this.tabList.addEventListener("keydown", function(e) {
                var t, s, i, n;
                e.target.closest(".saka-js-tabs__trigger") && (i = e, "horizontal" == (n = l.layout) && (i.keyCode && 39 == i.keyCode || i.key && "ArrowRight" == i.key) || "vertical" == n && (i.keyCode && 40 == i.keyCode || i.key && "ArrowDown" == i.key) ? (e.preventDefault(), l.selectNewTab("next")) : (t = e, ("horizontal" == (s = l.layout) && (t.keyCode && 37 == t.keyCode || t.key && "ArrowLeft" == t.key) || "vertical" == s && (t.keyCode && 38 == t.keyCode || t.key && "ArrowUp" == t.key)) && (e.preventDefault(), l.selectNewTab("prev"))))
            })
        }, e.prototype.selectNewTab = function(e) {
            var t = this.tabList.querySelector('[aria-selected="true"]'),
                s = Util.getIndexInArray(this.triggers, t);
            (s = "next" == e ? s + 1 : s - 1) < 0 && (s = this.listItems.length - 1), s >= this.listItems.length && (s = 0), this.triggerTab(this.triggers[s]), this.triggers[s].focus()
        }, e.prototype.triggerTab = function(e, t) {
            t && t.preventDefault();
            var s = Util.getIndexInArray(this.triggers, e);
            if ("true" != this.triggers[s].getAttribute("aria-selected")) {
                Util.removeClass(this.element, "saka-tabs--no-interaction");
                for (var i = 0; i < this.triggers.length; i++) {
                    var n = i == s;
                    Util.toggleClass(this.panels[i], this.hideClass, !n), this.customShowClass && Util.toggleClass(this.panels[i], this.customShowClass, n), this.triggers[i].setAttribute("aria-selected", n), n ? this.triggers[i].setAttribute("tabindex", "0") : this.triggers[i].setAttribute("tabindex", "-1")
                }
                this.deepLinkOn && history.replaceState(null, "", "#" + e.getAttribute("aria-controls"))
            }
        }, e.prototype.initDeepLink = function() {
            if (this.deepLinkOn) {
                var e = window.location.hash.substr(1),
                    t = this;
                if (e && "" != e)
                    for (var s = 0; s < this.panels.length; s++)
                        if (this.panels[s].getAttribute("id") == e) {
                            this.triggerTab(this.triggers[s], !1), setTimeout(function() {
                                t.panels[s].scrollIntoView(!0)
                            });
                            break
                        }
            }
        }, window.Tab = e;
        var t = document.getElementsByClassName("saka-js-tabs");
        if (0 < t.length)
            for (var s = 0; s < t.length; s++) new e(t[s])
    }(), !Util)
function Util() {}
Util.hasClass = function(e, t) {
        return e.classList.contains(t)
    }, Util.addClass = function(e, t) {
        var s = t.split(" ");
        e.classList.add(s[0]), 1 < s.length && Util.addClass(e, s.slice(1).join(" "))
    }, Util.removeClass = function(e, t) {
        var s = t.split(" ");
        e.classList.remove(s[0]), 1 < s.length && Util.removeClass(e, s.slice(1).join(" "))
    }, Util.toggleClass = function(e, t, s) {
        s ? Util.addClass(e, t) : Util.removeClass(e, t)
    },
    function() {
        var e = function(e) {
            var t, l;
            this.element = e, this.search = this.element.getElementsByClassName("saka-js-mega-nav__search"), this.searchActiveController = !1, this.menu = this.element.getElementsByClassName("saka-js-mega-nav__nav"), this.menuItems = this.menu[0].getElementsByClassName("saka-js-mega-nav__item"), this.menuActiveController = !1, this.itemExpClass = "mega-nav__item--expanded", this.classIconBtn = "saka-mega-nav__icon-btn--state-b", this.classSearchVisible = "saka-mega-nav__search--is-visible", this.classNavVisible = "saka-mega-nav__nav--is-visible", this.classMobileLayout = "mega-nav--mobile", this.classDesktopLayout = "saka-mega-nav--desktop", this.layout = "mobile", this.dropdown = this.element.getElementsByClassName("saka-js-dropdown"), this.expandedClass = "saka-mega-nav--expanded", this.hover = this.element.getAttribute("data-hover") && "on" == this.element.getAttribute("data-hover"), s(t = this),
                function(s) {
                    if (0 != s.search.length) {
                        s.searchToggles = document.querySelectorAll('[aria-controls="' + s.search[0].getAttribute("id") + '"]');
                        for (var e = 0; e < s.searchToggles.length; e++) ! function(t) {
                            s.searchToggles[t].addEventListener("click", function(e) {
                                o(s, s.search[0], "searchActiveController", s.classSearchVisible, s.searchToggles[t], !0), Util.hasClass(s.menu[0], s.classNavVisible) && o(s, s.menu[0], "menuActiveController", s.classNavVisible, s.menuActiveController, !1), d(s, !1), u(s)
                            })
                        }(e)
                    }
                }(t),
                function(s) {
                    if (0 != s.menu.length) {
                        s.menuToggles = document.querySelectorAll('[aria-controls="' + s.menu[0].getAttribute("id") + '"]');
                        for (var e = 0; e < s.menuToggles.length; e++) ! function(t) {
                            s.menuToggles[t].addEventListener("click", function(e) {
                                o(s, s.menu[0], "menuActiveController", s.classNavVisible, s.menuToggles[t], !0), Util.hasClass(s.search[0], s.classSearchVisible) && o(s, s.search[0], "searchActiveController", s.classSearchVisible, s.searchActiveController, !1), u(s)
                            })
                        }(e)
                    }
                }(t), (l = t).element.addEventListener("click", function(e) {
                    r(l, e, "click")
                }), l.hover && (l.element.addEventListener("mouseover", function(e) {
                    "desktop" == l.layout && r(l, e, "mouseover")
                }), l.element.addEventListener("mouseout", function(e) {
                    if ("desktop" == l.layout) {
                        var t = e.target.closest(".saka-js-mega-nav__item");
                        if (t) {
                            var s = t.getElementsByClassName("saka-js-mega-nav__control");
                            if (!(s.length < 1)) {
                                var i = Util.hasClass(t, l.itemExpClass);
                                if (i) {
                                    var n = e.relatedTarget;
                                    n && t.contains(n) || (Util.toggleClass(t, l.itemExpClass, !i), i ? s[0].removeAttribute("aria-expanded") : s[0].setAttribute("aria-expanded", "true"))
                                }
                            }
                        }
                    }
                })), t.element.addEventListener("update-menu-layout", function(e) {
                    s(t)
                })
        };

        function s(e) {
            var t, s = getComputedStyle(e.element, ":before").getPropertyValue("content").replace(/\'|"/g, "");
            s != e.layout && (e.layout = s, Util.toggleClass(e.element, e.classDesktopLayout, "desktop" == e.layout), Util.toggleClass(e.element, e.classMobileLayout, "desktop" != e.layout), "desktop" == e.layout && (d(e, !1), function(e) {
                if (0 == e.dropdown.length) return;
                for (var t = 0; t < e.dropdown.length; t++) e.dropdown[t].dispatchEvent(new CustomEvent("placeDropdown"))
            }(e)), a(e, !1), t = e, document.documentElement.style.setProperty("--mega-nav-offset-y", t.element.getBoundingClientRect().top + "px"), u(e))
        }

        function i(e) {
            a(e), Util.hasClass(e.menu[0], e.classNavVisible) && o(e, e.menu[0], "menuActiveController", e.classNavVisible, e.menuActiveController, !0), d(e, !1), u(e)
        }

        function n(e) {
            Util.hasClass(e.search[0], e.classSearchVisible) && !document.activeElement.closest(".saka-js-mega-nav__search") && o(e, e.search[0], "searchActiveController", e.classSearchVisible, e.searchActiveController, !0), Util.hasClass(e.menu[0], e.classNavVisible) && !document.activeElement.closest(".saka-js-mega-nav__nav") && o(e, e.menu[0], "menuActiveController", e.classNavVisible, e.menuActiveController, !0);
            for (var t = 0; t < e.menuItems.length; t++)
                if (Util.hasClass(e.menuItems[t], e.itemExpClass)) {
                    var s = document.activeElement.closest(".saka-js-mega-nav__item");
                    s && s == e.menuItems[t] || l(e, t)
                } u(e)
        }

        function a(e, t) {
            e.search.length < 1 || Util.hasClass(e.search[0], e.classSearchVisible) && o(e, e.search[0], "searchActiveController", e.classSearchVisible, e.searchActiveController, t)
        }

        function o(e, t, s, i, n, l) {
            var a = Util.hasClass(t, i);
            Util.toggleClass(t, i, !a), Util.toggleClass(n, e.classIconBtn, !a), a ? n.removeAttribute("aria-expanded") : n.setAttribute("aria-expanded", "true"), a ? (n && l && n.focus(), e[s] = !1) : (n && (e[s] = n), function(e) {
                for (var t = e.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary'), s = !1, i = 0; i < t.length; i++)
                    if (t[i].offsetWidth || t[i].offsetHeight || t[i].getClientRects().length) {
                        s = t[i];
                        break
                    } return s
            }(t).focus())
        }

        function r(e, t, s) {
            var i = t.target.closest(".saka-js-mega-nav__control");
            if (i) {
                var n = i.closest(".saka-js-mega-nav__item");
                if (n) {
                    var l = Util.hasClass(n, e.itemExpClass);
                    e.hover && l && "desktop" == e.layout && "click" != s || (Util.toggleClass(n, e.itemExpClass, !l), l ? i.removeAttribute("aria-expanded") : i.setAttribute("aria-expanded", "true"), "desktop" != e.layout || l || d(e, n), a(e, !1), u(e))
                }
            }
        }

        function d(e, t) {
            if (0 != e.menuItems.length)
                for (var s = 0; s < e.menuItems.length; s++) e.menuItems[s] != t && l(e, s)
        }

        function l(e, t) {
            Util.removeClass(e.menuItems[t], e.itemExpClass);
            var s = e.menuItems[t].getElementsByClassName("saka-js-mega-nav__control");
            0 < s.length && s[0].removeAttribute("aria-expanded")
        }

        function u(e) {
            0 < e.element.getElementsByClassName(e.itemExpClass).length && "desktop" == e.layout || 0 < e.element.getElementsByClassName(e.classSearchVisible).length || 0 < e.element.getElementsByClassName(e.classNavVisible).length && "mobile" == e.layout ? Util.addClass(e.element, e.expandedClass) : Util.removeClass(e.element, e.expandedClass)
        }
        var t, c = document.getElementsByClassName("saka-js-mega-nav");
        if (0 < c.length) {
            for (var h = [], m = 0; m < c.length; m++) t = m, h.push(new e(c[t]));
            window.addEventListener("keyup", function(e) {
                if (e.keyCode && 27 == e.keyCode || e.key && "escape" == e.key.toLowerCase())
                    for (var t = 0; t < h.length; t++) i(h[t]);
                if (e.keyCode && 9 == e.keyCode || e.key && "tab" == e.key.toLowerCase())
                    for (t = 0; t < h.length; t++) n(h[t])
            }), window.addEventListener("click", function(e) {
                e.target.closest(".saka-js-mega-nav") || i(h[0])
            });
            var v = !1,
                g = new CustomEvent("update-menu-layout");

            function p() {
                for (var e = 0; e < h.length; e++) h[e].element.dispatchEvent(g)
            }
            window.addEventListener("resize", function(e) {
                clearTimeout(v), v = setTimeout(p, 200)
            }), window.requestAnimationFrame ? window.requestAnimationFrame(p) : p()
        }
    }();